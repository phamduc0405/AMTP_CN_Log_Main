<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
    xmlns:local="clr-namespace:ACO2.Style">

    <local:IconCharFallbackConverter x:Key="IconCharFallbackConverter" />
    <!--  Button Style  -->
    <!--  Button Style  -->
    <Style x:Key="ButtonSave" TargetType="Button">
        <Style.Resources>
            <DropShadowEffect
                x:Key="ButtonShadow"
                BlurRadius="5"
                Opacity="0.7"
                ShadowDepth="3"
                Color="Gray" />
        </Style.Resources>
        <!--  Normal button style  -->
        <Setter Property="Width" Value="90" />
        <Setter Property="Background" Value="#D6DAF3" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Effect" Value="{StaticResource ButtonShadow}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource panelOverColor_LightSlateBlue}" />
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#C8DFFA" />
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}" />
                <Setter Property="Effect" Value="{x:Null}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  Control button  -->
    <Style x:Key="ButtonControl" TargetType="Button">
        <Style.Resources>
            <DropShadowEffect
                x:Key="ButtonShadow"
                BlurRadius="5"
                Opacity="0.7"
                ShadowDepth="3"
                Color="Gray" />
        </Style.Resources>
        <!--  Normal button style  -->
        <Setter Property="Width" Value="90" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Background" Value="#D6DAF3" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Effect" Value="{StaticResource ButtonShadow}" />
        <Setter Property="FontSize" Value="15" />
        <!--  FontSize mặc định cho Button  -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                        <Grid>
                            <!--  Ripple Effect  -->
                            <Ellipse
                                x:Name="ellipseRipple"
                                Width="0"
                                Height="0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Fill="{StaticResource btncolor_DarkTurquoise}"
                                Opacity="0">
                                <Ellipse.RenderTransform>
                                    <TranslateTransform X="0" Y="0" />
                                </Ellipse.RenderTransform>
                            </Ellipse>

                            <!--  Button Content with Icon  -->
                            <Viewbox>
                                <StackPanel
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Orientation="Horizontal">
                                    <!--  Icon  -->
                                    <fa:IconImage
                                        x:Name="iconElement"
                                        Width="{TemplateBinding FontSize}"
                                        Height="{TemplateBinding FontSize}"
                                        Margin="0,0,3,0"
                                        Foreground="{TemplateBinding Foreground}"
                                        Icon="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource IconCharFallbackConverter}}" />
                                    <!--  Text  -->
                                    <TextBlock
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        FontFamily="Montserrat"
                                        FontSize="{TemplateBinding FontSize}"
                                        FontWeight="Medium"
                                        Foreground="{TemplateBinding Foreground}"
                                        Text="{TemplateBinding Content}" />
                                </StackPanel>
                            </Viewbox>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="{x:Null}">
                            <Setter TargetName="iconElement" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="iconElement" Property="Grid.RowSpan" Value="2" />
                            <Setter TargetName="iconElement" Property="VerticalAlignment" Value="Center" />
                        </Trigger>
                        <!--  Button style on hover  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource panelOverColor_LightSlateBlue}" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                        <!--  Button style on press  -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#C8DFFA" />
                            <Setter Property="Foreground" Value="Black" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!--  Ripple Width Animation  -->
                                        <DoubleAnimation
                                            Storyboard.TargetName="ellipseRipple"
                                            Storyboard.TargetProperty="Width"
                                            From="0"
                                            To="180"
                                            Duration="0:0:0.5" />
                                        <!--  Ripple Height Animation  -->
                                        <DoubleAnimation
                                            Storyboard.TargetName="ellipseRipple"
                                            Storyboard.TargetProperty="Height"
                                            From="0"
                                            To="180"
                                            Duration="0:0:0.5" />
                                        <!--  Ripple Opacity Animation  -->
                                        <DoubleAnimation
                                            Storyboard.TargetName="ellipseRipple"
                                            Storyboard.TargetProperty="Opacity"
                                            From="1.0"
                                            To="0.0"
                                            Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Reset button  -->
    <Style x:Key="ButtonReset" TargetType="Button">
        <Setter Property="Width" Value="90" />
        <Setter Property="Background" Value="LightYellow" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontSize" Value="15" />
        <!--  Default font size  -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                        <Grid>
                            <!--  Icon and Text  -->
                            <Viewbox>
                                <StackPanel
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Orientation="Horizontal">
                                    <!--  Icon  -->
                                    <fa:IconImage
                                        x:Name="iconElement"
                                        Width="{TemplateBinding FontSize}"
                                        Height="{TemplateBinding FontSize}"
                                        Margin="0,0,3,0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Foreground="{TemplateBinding Foreground}"
                                        Icon="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource IconCharFallbackConverter}}" />
                                    <!--  Text  -->
                                    <TextBlock
                                        x:Name="textElement"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        FontFamily="Montserrat"
                                        FontSize="{TemplateBinding FontSize}"
                                        FontWeight="Medium"
                                        Foreground="{TemplateBinding Foreground}"
                                        Text="{TemplateBinding Content}" />
                                </StackPanel>
                            </Viewbox>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="{x:Null}">
                            <Setter TargetName="iconElement" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="iconElement" Property="Grid.RowSpan" Value="2" />
                            <Setter TargetName="iconElement" Property="VerticalAlignment" Value="Center" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Button style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightYellow" />
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
            <!--  Button style on press  -->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="Yellow" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Button Circle  -->
    <Style x:Key="ButtonCircle" TargetType="Button">
        <Style.Resources>
            <DropShadowEffect
                x:Key="ButtonShadow"
                BlurRadius="5"
                Opacity="0.7"
                ShadowDepth="3"
                Color="Gray" />
        </Style.Resources>
        <!--  Normal button style  -->
        <Setter Property="Width" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Background" Value="#D6DAF3" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="FontSize" Value="15" />
        <!--  Default font size  -->
        <Setter Property="Effect" Value="{StaticResource ButtonShadow}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Ellipse Fill="{TemplateBinding Background}" />
                        <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <!--  Icon  -->
                            <fa:IconImage
                                x:Name="iconElement"
                                Grid.Row="0"
                                Width="{TemplateBinding FontSize}"
                                Height="{TemplateBinding FontSize}"
                                Margin="0,0,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="{TemplateBinding Foreground}"
                                Icon="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource IconCharFallbackConverter}}" />
                            <!--  Text  -->
                            <TextBlock
                                Grid.Row="1"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontFamily="Montserrat"
                                FontSize="{TemplateBinding FontSize}"
                                FontWeight="Medium"
                                Foreground="{TemplateBinding Foreground}"
                                Text="{TemplateBinding Content}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--  Icon Color based on Tag  -->
                        <DataTrigger Binding="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" Value="Plus">
                            <Setter TargetName="iconElement" Property="Foreground" Value="ForestGreen" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" Value="Minus">
                            <Setter TargetName="iconElement" Property="Foreground" Value="OrangeRed" />
                        </DataTrigger>
                        <!--  Visibility Triggers  -->
                        <Trigger Property="Tag" Value="{x:Null}">
                            <Setter TargetName="iconElement" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="iconElement" Property="Grid.RowSpan" Value="2" />
                            <Setter TargetName="iconElement" Property="VerticalAlignment" Value="Center" />
                            <Setter TargetName="iconElement" Property="Width" Value="40" />
                            <Setter TargetName="iconElement" Property="Height" Value="40" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource panelOverColor_LightSlateBlue}" />
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#C8DFFA" />
                <Setter Property="Effect" Value="{x:Null}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  MenuButton Icon  -->
    <Style x:Key="menuButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=RadioButton}}" />
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Margin" Value="0,0,0,0" />
    </Style>
    <!--  Button transparent  -->
    <Style x:Key="ButtonTransparent" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <!--  Pressed Animation  -->
                        <Storyboard x:Key="PressedStoryboard">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="#C8DFFA" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <!--  Released Animation  -->
                        <Storyboard x:Key="ReleasedStoryboard">
                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                <EasingColorKeyFrame KeyTime="0" Value="White" />
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <!--  Nền chính  -->
                        <Rectangle
                            x:Name="rectangle"
                            Fill="Transparent"
                            RadiusX="8"
                            RadiusY="8"
                            StrokeThickness="1.9" />

                        <Viewbox>
                            <StackPanel
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Orientation="Horizontal">
                                <!--  Icon  -->
                                <fa:IconImage
                                    x:Name="iconElement"
                                    Width="{TemplateBinding FontSize}"
                                    Height="{TemplateBinding FontSize}"
                                    Margin="0,0,3,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Foreground="{TemplateBinding Foreground}"
                                    Icon="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource IconCharFallbackConverter}}" />
                                <!--  Text  -->
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontFamily="Montserrat"
                                    FontSize="{TemplateBinding FontSize}"
                                    FontWeight="Medium"
                                    Foreground="{TemplateBinding Foreground}"
                                    Text="{TemplateBinding Content}" />
                            </StackPanel>
                        </Viewbox>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="{x:Null}">
                            <Setter TargetName="iconElement" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="iconElement" Property="Grid.RowSpan" Value="2" />
                            <Setter TargetName="iconElement" Property="VerticalAlignment" Value="Center" />
                        </Trigger>
                        <Trigger Property="Tag" Value="{x:Null}">
                            <Setter TargetName="iconElement" Property="Grid.RowSpan" Value="2" />
                            <Setter TargetName="iconElement" Property="VerticalAlignment" Value="Center" />
                        </Trigger>
                        <!--  Hover Trigger  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="rectangle" Property="Fill" Value="#836EFB" />
                        </Trigger>
                        <!--  Pressed Trigger  -->
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedStoryboard}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ReleasedStoryboard}" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <!--  Disabled State  -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="rectangle" Property="Fill" Value="#FFD3D3D3" />
                            <Setter Property="Foreground" Value="#FFA8A8A8" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  Button Line Under  -->
    <Style x:Key="ButtonLineUnder" TargetType="Button">
        <Setter Property="Background" Value="White" />
        <Setter Property="Content" Value="nam" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="Border"
                        Background="White"
                        BorderBrush="Black"
                        BorderThickness="2"
                        CornerRadius="10">
                        <Grid>
                            <Viewbox
                                Grid.Row="1"
                                Grid.ColumnSpan="3"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center">
                                <TextBlock
                                    x:Name="TextElement"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontFamily="Montserrat"
                                    FontSize="{TemplateBinding FontSize}"
                                    FontWeight="Medium"
                                    Foreground="{TemplateBinding Foreground}"
                                    Text="{TemplateBinding Content}"
                                    TextAlignment="Center"
                                    TextWrapping="Wrap" />
                            </Viewbox>
                            <Border
                                x:Name="Line"
                                Grid.Row="3"
                                Grid.ColumnSpan="3"
                                Height="9"
                                Margin="10,60,10,0"
                                Background="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"
                                BorderBrush="Black"
                                BorderThickness="2"
                                Tag="{TemplateBinding Tag}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource color_LavenderBlue}" />
                            <Setter Property="Background" Value="{StaticResource color_LightGray}" />
                            <Setter Property="BorderBrush" Value="{StaticResource color_LightSkyBlue}" />
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource color_DarkBlue}" />
                            <Setter Property="Background" Value="{StaticResource color_DarkBlue}" />
                            <Setter Property="BorderBrush" Value="{StaticResource color_Accent}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  Button Badge  -->
    <Style x:Key="ButtonBadge" TargetType="Button">
        <Style.Resources>
            <DropShadowEffect
                x:Key="ButtonShadow"
                BlurRadius="5"
                Opacity="0.7"
                ShadowDepth="3"
                Color="Gray" />
        </Style.Resources>
        <!--  Normal button style  -->
        <Setter Property="Width" Value="90" />
        <Setter Property="Height" Value="40" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Background" Value="#D6DAF3" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Effect" Value="{StaticResource ButtonShadow}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <!--  Main Button  -->
                        <Border Background="{TemplateBinding Background}" CornerRadius="5">
                            <Grid>
                                <!--  Ripple Effect  -->
                                <Ellipse
                                    x:Name="ellipseRipple"
                                    Width="0"
                                    Height="0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Fill="#00BCD4"
                                    Opacity="0">
                                    <Ellipse.RenderTransform>
                                        <TranslateTransform X="0" Y="0" />
                                    </Ellipse.RenderTransform>
                                </Ellipse>

                                <!--  Button Content with Icon  -->
                                <Viewbox>
                                    <StackPanel
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Orientation="Horizontal">
                                        <!--  Text  -->
                                        <TextBlock
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            FontFamily="Montserrat"
                                            FontSize="{TemplateBinding FontSize}"
                                            FontWeight="Medium"
                                            Foreground="{TemplateBinding Foreground}"
                                            Text="{TemplateBinding Content}" />
                                    </StackPanel>
                                </Viewbox>
                            </Grid>
                        </Border>

                        <!--  Badge  -->

                        <Border
                            Margin="25,-15,-25,0"
                            Padding="5,2"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            Background="#8C9EFF"
                            CornerRadius="5"
                            RenderTransformOrigin="0.5,0.5">

                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="{TemplateBinding FontSize}"
                                FontWeight="Bold"
                                Foreground="Black"
                                Text="{TemplateBinding Tag}" />
                        </Border>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--  Button style on hover  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#8C9EFF" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                        <!--  Button style on press  -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#C8DFFA" />
                            <Setter Property="Foreground" Value="Black" />
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!--  Ripple Width Animation  -->
                                        <DoubleAnimation
                                            Storyboard.TargetName="ellipseRipple"
                                            Storyboard.TargetProperty="Width"
                                            From="0"
                                            To="180"
                                            Duration="0:0:0.5" />
                                        <!--  Ripple Height Animation  -->
                                        <DoubleAnimation
                                            Storyboard.TargetName="ellipseRipple"
                                            Storyboard.TargetProperty="Height"
                                            From="0"
                                            To="180"
                                            Duration="0:0:0.5" />
                                        <!--  Ripple Opacity Animation  -->
                                        <DoubleAnimation
                                            Storyboard.TargetName="ellipseRipple"
                                            Storyboard.TargetProperty="Opacity"
                                            From="1.0"
                                            To="0.0"
                                            Duration="0:0:0.5" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  // Tooltip Style Template //  -->

    <Style x:Key="iconButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
    </Style>

    <Style x:Key="tt_style" TargetType="ToolTip">

        <Setter Property="Placement" Value="Right" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Width" Value="150" />
        <Setter Property="Margin" Value="15,0,0,0" />
        <Setter Property="Background" Value="#9AC0CD" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="#F5F5F5" />
        <Setter Property="FontFamily" Value="Fonts/Roboto-Light.ttf #Roboto" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="PlacementRectangle" Value="30,-40,0,0" />
        <Setter Property="HorizontalOffset" Value="15" />
        <Setter Property="VerticalOffset" Value="6" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />

    </Style>


    <!--  Radio Button Style  -->
    <!--  Radio Button Rectangle Style  -->
    <Style x:Key="RadioButtonRectangle" TargetType="RadioButton">
        <!--  Mặc định  -->
        <Setter Property="Background" Value="#D6DAF3" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Content" Value="" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border
                        x:Name="borderElement"
                        Background="{TemplateBinding Background}"
                        CornerRadius="5">
                        <Grid>
                            <!--  Nội dung Button  -->
                            <Viewbox>
                                <StackPanel
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Orientation="Horizontal">
                                    <!--  Icon  -->
                                    <fa:IconImage
                                        x:Name="iconElement"
                                        Width="{TemplateBinding FontSize}"
                                        Height="{TemplateBinding FontSize}"
                                        Margin="0,0,3,0"
                                        Foreground="{TemplateBinding Foreground}"
                                        Icon="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource IconCharFallbackConverter}}" />
                                    <!--  Text  -->
                                    <TextBlock
                                        x:Name="textElement"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        FontFamily="Montserrat"
                                        FontSize="{TemplateBinding FontSize}"
                                        FontWeight="Medium"
                                        Foreground="{TemplateBinding Foreground}"
                                        Text="{TemplateBinding Content}" />
                                </StackPanel>
                            </Viewbox>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--  Ẩn Icon nếu không có Tag  -->
                        <Trigger Property="Tag" Value="{x:Null}">
                            <Setter TargetName="iconElement" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <!--  Khi Checked  -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="borderElement" Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter TargetName="textElement" Property="Foreground" Value="White" />
                        </Trigger>

                        <!--  Khi Không Checked  -->
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Background" Value="#D6DAF3" />
                            <Setter TargetName="borderElement" Property="Background" Value="#D6DAF3" />
                            <Setter Property="Foreground" Value="Black" />
                            <Setter TargetName="textElement" Property="Foreground" Value="Black" />
                        </Trigger>

                        <!--  Hover Effect  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="White" />
                            <Setter TargetName="textElement" Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Radio Button No Border Style  -->
    <Style x:Key="RadioButtonNoborderStyle" TargetType="RadioButton">
        <Setter Property="Background" Value="Red" />
        <Setter Property="FontSize" Value="15" />
        <!--  Mặc định Background nếu không đặt  -->
        <Setter Property="Foreground" Value="Black" />
        <!--  Mặc định Foreground nếu không đặt  -->
        <Setter Property="BorderBrush" Value="#FF7FA6EF" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Content" Value="" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border CornerRadius="5">
                        <Grid>
                            <!--  Button Content  -->
                            <Viewbox>
                                <StackPanel
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Orientation="Horizontal">
                                    <!--  Icon  -->
                                    <fa:IconImage
                                        x:Name="iconElement"
                                        Width="{TemplateBinding FontSize}"
                                        Height="{TemplateBinding FontSize}"
                                        Margin="0,0,3,0"
                                        Foreground="{TemplateBinding Foreground}"
                                        Icon="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource IconCharFallbackConverter}}" />
                                    <!--  Text  -->
                                    <TextBlock
                                        x:Name="textElement"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        FontFamily="Montserrat"
                                        FontSize="{TemplateBinding FontSize}"
                                        FontWeight="Medium"
                                        Foreground="{TemplateBinding Foreground}"
                                        Text="{TemplateBinding Content}" />
                                </StackPanel>
                            </Viewbox>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--  Ẩn icon nếu không có Tag  -->
                        <Trigger Property="Tag" Value="{x:Null}">
                            <Setter TargetName="iconElement" Property="Visibility" Value="Collapsed" />
                        </Trigger>

                        <!--  Khi Checked  -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="textElement" Property="Foreground" Value="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="iconElement" Property="Foreground" Value="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>

                        <!--  Khi Không Checked  -->
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="textElement" Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>

                        <!--  Hover Effect  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="textElement" Property="Foreground" Value="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  Radio Button Circle Style  -->
    <Style x:Key="RadioButtonCircleStyle" TargetType="RadioButton">
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <!--  Outer Circle  -->
                        <Ellipse
                            x:Name="OuterCircle"
                            Width="20"
                            Height="20"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Fill="Transparent"
                            Stroke="Gray"
                            StrokeThickness="2" />

                        <!--  Inner Circle  -->
                        <Ellipse
                            x:Name="InnerCircle"
                            Width="12"
                            Height="12"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Fill="Transparent" />

                        <!--  Content  -->
                        <TextBlock
                            Margin="0,37,0,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontFamily="Montserrat"
                            FontSize="{TemplateBinding FontSize}"
                            FontWeight="Medium"
                            Foreground="{TemplateBinding Foreground}"
                            Text="{TemplateBinding Content}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--  Hover Effect  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="OuterCircle" Property="Stroke">
                                <Setter.Value>
                                    <Binding Path="Tag" RelativeSource="{RelativeSource TemplatedParent}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!--  Checked Effect  -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="OuterCircle" Property="Stroke">
                                <Setter.Value>
                                    <Binding Path="Background" RelativeSource="{RelativeSource TemplatedParent}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="InnerCircle" Property="Fill">
                                <Setter.Value>
                                    <Binding Path="Background" RelativeSource="{RelativeSource TemplatedParent}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!--  Unchecked Effect  -->
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="InnerCircle" Property="Fill" Value="Transparent" />
                            <Setter TargetName="OuterCircle" Property="Stroke" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  Radio Button Tab Style  -->
    <Style x:Key="TabRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border
                        x:Name="TabBorder"
                        Padding="10,5"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1,1,1,0"
                        CornerRadius="5,5,0,0">
                        <Viewbox>
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontFamily="Montserrat"
                                FontSize="{TemplateBinding FontSize}"
                                FontWeight="Medium"
                                Foreground="{TemplateBinding Foreground}"
                                Text="{TemplateBinding Content}" />
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="TabBorder" Property="Background" Value="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="TabBorder" Property="BorderBrush" Value="{Binding Path=BorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="TabBorder" Property="Background" Value="#D6DAF3" />
                            <Setter TargetName="TabBorder" Property="BorderBrush" Value="#FF7FA6EF" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="TabBorder" Property="Background" Value="Transparent" />
                            <Setter TargetName="TabBorder" Property="BorderBrush" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="10,5" />
    </Style>


    <Style x:Key="controlButtonPanel" TargetType="RadioButton">
        <!--  Normal button style  -->
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Content" Value="" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="{TemplateBinding Background}" CornerRadius="3">
                        <StackPanel Width="150" Orientation="Horizontal">
                            <fa:IconImage
                                x:Name="Icon"
                                Width="25"
                                Height="40"
                                Margin="10,0,0,0"
                                Foreground="Black"
                                Icon="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type RadioButton}, AncestorLevel=1}, Path=Tag}"
                                Tag="{TemplateBinding Tag}" />
                            <TextBlock
                                x:Name="txt"
                                Margin="25,10,0,0"
                                Text="{TemplateBinding Content}" />
                        </StackPanel>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#FF7FA6EF" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter TargetName="Icon" Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="#FF7FA6EF" />
                            <Setter Property="BorderBrush" Value="#FF7FA6EF" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter TargetName="Icon" Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--  Button Style on hover  -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF7FA6EF" />
                <Setter Property="Foreground" Value="White" />

            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="#FF7FA6EF" />
                <Setter Property="BorderBrush" Value="#FF7FA6EF" />
                <Setter Property="Foreground" Value="White" />

            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>